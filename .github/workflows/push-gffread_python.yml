name: Build gffread_python

on:
  workflow_dispatch

env:
  VERSION_STRING: 5:24.0.7-1~ubuntu.22.04~jammy

jobs:
  build:
    name: Build and push gffread_python image
    runs-on: ubuntu-22.04

    steps:
    - name: Clean workspace before start
      run: rm -rf $GITHUB_WORKSPACE/*

    - uses: actions/checkout@v4.1.1

    #Removing Docker 25 as it causes gitpod issues and installing Docker 24.0.7
    #- name: Uninstall conflicting packages
    #  run: sudo apt-get remove docker.io \
    #       && sudo apt-get remove docker-doc \
    #       && sudo apt-get docker-compose \
    #       && sudo apt-get docker-compose-v2 \
    #       && sudo apt-get podman-docker \
    #       && sudo apt-get containerd runc

#    - name: Remove previous Docker configuration file
#      run: sudo rm /etc/init.d/docker
#
#    - name: Set up Docker's apt repository
#      run: sudo apt-get update && sudo apt-get install ca-certificates curl #\
#           && sudo install -m 0755 -d /etc/apt/keyrings \
#           && sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc \
#           && sudo chmod a+r /etc/apt/keyrings/docker.asc 
#
#    - name: Add the repository to apt sources
#      run: echo \
#           "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
#           $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
#           sudo tee /etc/apt/sources.list.d/docker.list > /dev/null \
#           && sudo apt-get update
#
#    - name: Install Docker 24.0.7
#      run: sudo apt-get install docker-ce=${VERSION_STRING} docker-ce-cli=${VERSION_STRING} containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Check Docker version
      run: docker --version
#
#    - name: Build Image
#      id: build-image
#      uses: redhat-actions/buildah-build@v2.12
#      with:
#        image: gffread_python
#        tags: python-3.10_linux_x86_64
#        containerfiles: gffread_python/Dockerfile
#
#    - name: Push To quay.io
#      id: push-to-quay
#      uses: redhat-actions/push-to-registry@v2.7
#      with:
#        image: ${{ steps.build-image.outputs.image }}
#        tags: ${{ steps.build-image.outputs.tags }}
#        registry: quay.io/ecoflowucl
#        username: ecoflowucl+dockerbuild
#        password: ${{ secrets.DOCKERBUILD_ROBOT_CREDENTIALS }}
#
#    - name: Print image url
#      run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
#
#    - name: Clean workspace after finish
#      run: rm -rf $GITHUB_WORKSPACE/*
